// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/messages.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//normal message
type Message struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_df942ad4c8e15dcf, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Message) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

//subscribe message
type SubscribeMsg struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeMsg) Reset()         { *m = SubscribeMsg{} }
func (m *SubscribeMsg) String() string { return proto.CompactTextString(m) }
func (*SubscribeMsg) ProtoMessage()    {}
func (*SubscribeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_df942ad4c8e15dcf, []int{1}
}

func (m *SubscribeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeMsg.Unmarshal(m, b)
}
func (m *SubscribeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeMsg.Marshal(b, m, deterministic)
}
func (m *SubscribeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeMsg.Merge(m, src)
}
func (m *SubscribeMsg) XXX_Size() int {
	return xxx_messageInfo_SubscribeMsg.Size(m)
}
func (m *SubscribeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeMsg proto.InternalMessageInfo

func (m *SubscribeMsg) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "msg.Message")
	proto.RegisterType((*SubscribeMsg)(nil), "msg.SubscribeMsg")
}

func init() { proto.RegisterFile("msg/messages.proto", fileDescriptor_df942ad4c8e15dcf) }

var fileDescriptor_df942ad4c8e15dcf = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x2d, 0x4e, 0xd7,
	0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0xce, 0x2d, 0x4e, 0x57, 0xb2, 0xe4, 0x62, 0xf7, 0x85, 0x08, 0x0b, 0x89, 0x70, 0xb1, 0x96, 0xe4,
	0x17, 0x64, 0x26, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x38, 0x42, 0x12, 0x5c, 0xec,
	0xc9, 0xf9, 0x79, 0x25, 0xa9, 0x79, 0x25, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x30, 0xae,
	0x92, 0x1a, 0x17, 0x4f, 0x70, 0x69, 0x52, 0x71, 0x72, 0x51, 0x66, 0x52, 0xaa, 0x6f, 0x71, 0xba,
	0x90, 0x18, 0x17, 0x1b, 0x58, 0x4b, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0x67, 0x10, 0x94, 0xe7,
	0xc4, 0xe4, 0xc1, 0x98, 0xc4, 0x06, 0xb6, 0xd2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x1d,
	0x93, 0xce, 0x88, 0x00, 0x00, 0x00,
}
